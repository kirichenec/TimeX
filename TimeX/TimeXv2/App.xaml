<Application x:Class="TimeXv2.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:TimeXv2.Controls"
             xmlns:statics="clr-namespace:TimeXv2.Static"
             xmlns:vm="clr-namespace:TimeXv2.ViewModel"
             StartupUri="View\MainView.xaml"
             mc:Ignorable="d"
             LoadCompleted="Application_LoadCompleted">
    <Application.Resources>
        <ResourceDictionary>
            <!--Material Design style-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.LightBlue.xaml" />
                <ResourceDictionary Source="Media/ActionIcon.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Thickness x:Key="RightBottom" Left="0" Top="0" Right="8" Bottom="8" />
            <Thickness x:Key="ZeroMargin" Left="0" Top="0" Right="0" Bottom="0" />
            <Thickness x:Key="LeftTop" Left="8" Top="8" Right="0" Bottom="0" />

            <!--Global View Model Locator-->
            <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" />

            <!--Animations-->
            <Storyboard x:Key="OpacityFadeIn">
                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0:0.5" />
            </Storyboard>
            <Storyboard x:Key="OpacityFadeOut">
                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0:0.5" />
            </Storyboard>
            <Storyboard x:Key="BlinkToRed" RepeatBehavior="Forever">
                <ColorAnimation To="Red"
                                Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                FillBehavior="HoldEnd"
                                AutoReverse="True"
                                Duration="0:0:2"/>
            </Storyboard>

            <Style TargetType="{x:Type materialDesign:TimePicker}" BasedOn="{StaticResource MaterialDesignFloatingHintTimePicker}">
                <Setter Property="materialDesign:HintAssist.FloatingScale" Value="0.75" />
            </Style>

            <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">
                <Setter Property="materialDesign:HintAssist.FloatingScale" Value="0.75" />
            </Style>

            <!--NavigationWindow style-->
            <Style TargetType="{x:Type NavigationWindow}">
                <Setter Property="MinHeight" Value="550"/>
                <Setter Property="MinWidth" Value="800"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type NavigationWindow}">
                            <AdornerDecorator>
                                <ContentPresenter Name="PART_NavWinCP" ClipToBounds="true" />
                            </AdornerDecorator>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Topmost" Value="{Binding Source={x:Static statics:Properties.Instance}, Path=Topmost, Mode=TwoWay}" />
            </Style>

            <Style x:Key="VerticalSeparatorStyle" TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Type Separator}}">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <TransformGroup.Children>
                                <TransformCollection>
                                    <RotateTransform Angle="90"/>
                                </TransformCollection>
                            </TransformGroup.Children>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ScrollBar style-->
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource MaterialDesignScrollBar}">
                <Setter Property="Cursor" Value="Hand" />
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Margin" Value="-10,0,-20,0" />
                        <Setter Property="MinWidth" Value="8" />
                        <Setter Property="Width" Value="18" />
                    </Trigger>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Margin" Value="0,-18,0,0" />
                        <Setter Property="MinHeight" Value="8" />
                        <Setter Property="Height" Value="18" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--Button styles-->
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                <Setter Property="Margin" Value="{StaticResource RightBottom}" />
            </Style>
            <Style TargetType="{x:Type Button}" x:Key="RaisedButton" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
                <Setter Property="Margin" Value="{StaticResource RightBottom}" />
            </Style>
            <Style TargetType="{x:Type Button}" x:Key="ActionFlatButton" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Padding" Value="0" />
                <Setter Property="Width" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
            </Style>
            <Style TargetType="{x:Type Button}" x:Key="ActionRaisedDarkButton" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                <Setter Property="Margin" Value="{StaticResource RightBottom}" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Width" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
            </Style>
            <Style TargetType="{x:Type StackPanel}" x:Key="ButtonStackPanel">
                <Setter Property="Orientation" Value="Horizontal" />
                <Setter Property="Margin" Value="0" />
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="ButtonTextBlock">
                <Setter Property="Margin" Value="8,0,0,0" />
            </Style>

            <!--Icons style-->
            <Style TargetType="materialDesign:PackIcon">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0" />
            </Style>

            <!--StackPanel style-->
            <Style TargetType="{x:Type StackPanel}">
                <Setter Property="Margin" Value="{StaticResource LeftTop}" />
            </Style>

            <!--TextBlock style-->
            <Style TargetType="{x:Type TextBlock}" x:Key="GlobalTextblockStyle" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="Margin" Value="{StaticResource RightBottom}" />
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="TitleTextBlock" BasedOn="{StaticResource MaterialDesignTitleTextBlock}">
                <Setter Property="Margin" Value="{StaticResource RightBottom}" />
            </Style>

            <!--UserControl, Window style-->
            <Style TargetType="Control" x:Key="BasicStyle">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
                <Setter Property="FontFamily" Value="{StaticResource MaterialDesignFont}" />
                <Setter Property="Language" Value="ru-RU" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}" />
                <Setter Property="TextElement.FontWeight" Value="Regular" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
            </Style>

            <!--Page style-->
            <Style x:Key="PageStyle" TargetType="Page" BasedOn="{StaticResource {x:Type Page}}">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="FontFamily" Value="{StaticResource MaterialDesignFont}" />
                <Setter Property="Language" Value="ru-RU" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}" />
                <Setter Property="TextElement.FontWeight" Value="Regular" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Page">
                            <materialDesign:DialogHost x:Name="rootDialogHost" DataContext="{Binding Source={StaticResource Locator}}">
                                <materialDesign:DialogHost>
                                    <Grid Background="{DynamicResource MaterialDesignPaper}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <!--Header-->
                                        <materialDesign:ColorZone Name="HeaderZone"
                                                                  materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                                                  Mode="PrimaryMid"
                                                                  DockPanel.Dock="Top"
                                                                  Grid.Row="0"
                                                                  Grid.ColumnSpan="3"
                                                                  Padding="5">
                                            <StackPanel Orientation="Horizontal" Margin="0" Grid.Row="0">
                                                <StackPanel.Resources>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Margin" Value="8" />
                                                        <Setter Property="Padding" Value="0" />
                                                        <Setter Property="VerticalAlignment" Value="Center" />
                                                    </Style>
                                                </StackPanel.Resources>
                                                <ToggleButton ToolTip="Меню"
                                                              x:Name="MenuToggleButton"
                                                              DockPanel.Dock="Top"
                                                              Height="24"
                                                              IsChecked="False"
                                                              Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                                                <TextBlock Text="Мероприятия"
                                                           FontSize="18"
                                                           SnapsToDevicePixels="True"
                                                           Cursor="Hand"
                                                           ToolTip="К списку мероприятий">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseUp">
                                                            <i:InvokeCommandAction Command="{Binding GlobalViewModel.MainPageCommand}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </TextBlock>
                                            </StackPanel>
                                        </materialDesign:ColorZone>
                                        <materialDesign:DrawerHost Grid.Row="1" IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
                                            <!--Menu-->
                                            <materialDesign:DrawerHost.LeftDrawerContent>
                                                <DockPanel MinWidth="150">
                                                    <StackPanel Orientation="Vertical">
                                                        <StackPanel.Resources>
                                                            <Style TargetType="materialDesign:PackIcon">
                                                                <Setter Property="Grid.Column" Value="0" />
                                                                <Setter Property="Margin" Value="0,0,8,0" />
                                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                                <Setter Property="Width" Value="18" />
                                                            </Style>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="Grid.Column" Value="1" />
                                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                                <Setter Property="TextAlignment" Value="Left" />
                                                            </Style>
                                                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                                                <Setter Property="Command" Value="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}" />
                                                                <Setter Property="CommandParameter" Value="{x:Static Dock.Left}" />
                                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                                <Setter Property="Margin" Value="0" />
                                                                <Setter Property="Padding" Value="12,0,16,0" />
                                                            </Style>
                                                            <Style TargetType="StackPanel">
                                                                <Setter Property="Margin" Value="0" />
                                                            </Style>
                                                        </StackPanel.Resources>

                                                        <Separator Background="{DynamicResource MaterialDesignPaper}" />
                                                        <StackPanel Orientation="Vertical">
                                                            <Button Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}">
                                                                <Button.CommandParameter>
                                                                    <controls:SettingsControl/>
                                                                </Button.CommandParameter>
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto" />
                                                                        <ColumnDefinition />
                                                                    </Grid.ColumnDefinitions>
                                                                    <materialDesign:PackIcon Kind="Settings" />
                                                                    <TextBlock Text="Настройки" />
                                                                </Grid>
                                                            </Button>
                                                            <Button Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}">
                                                                <Button.CommandParameter>
                                                                    <controls:AboutControl/>
                                                                </Button.CommandParameter>
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto" />
                                                                        <ColumnDefinition />
                                                                    </Grid.ColumnDefinitions>
                                                                    <materialDesign:PackIcon Kind="About" />
                                                                    <TextBlock Text="О программе" />
                                                                </Grid>
                                                            </Button>
                                                            <Button Command="{Binding GlobalViewModel.InvertTopmostCommand}">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto" />
                                                                        <ColumnDefinition />
                                                                    </Grid.ColumnDefinitions>
                                                                    <materialDesign:PackIcon>
                                                                        <materialDesign:PackIcon.Style>
                                                                            <Style TargetType="materialDesign:PackIcon" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                                                <Setter Property="Kind" Value="CheckBoxOutlineBlank" />
                                                                                <Style.Triggers>
                                                                                    <DataTrigger
                                                                                        Binding="{Binding Source={x:Static statics:Properties.Instance},
                                                                                                          Path=Topmost,
                                                                                                          Mode=TwoWay,
                                                                                                          UpdateSourceTrigger=PropertyChanged}"
                                                                                        Value="True">
                                                                                        <Setter Property="Kind" Value="CheckboxMarkedOutline" />
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </materialDesign:PackIcon.Style>
                                                                    </materialDesign:PackIcon>
                                                                    <TextBlock Text="Поверх всех окон" />
                                                                </Grid>
                                                            </Button>
                                                        </StackPanel>
                                                        <Separator Background="{DynamicResource MaterialDesignPaper}" />
                                                        <StackPanel Orientation="Vertical">
                                                            <Button Command="{Binding GlobalViewModel.CloseAppCommand}">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto" />
                                                                        <ColumnDefinition />
                                                                    </Grid.ColumnDefinitions>
                                                                    <materialDesign:PackIcon Kind="ExitToApp" />
                                                                    <TextBlock Text="Выход" />
                                                                </Grid>
                                                            </Button>
                                                        </StackPanel>
                                                    </StackPanel>
                                                </DockPanel>
                                            </materialDesign:DrawerHost.LeftDrawerContent>
                                            <Grid>
                                                <!--Content-->
                                                <ContentPresenter>
                                                    <ContentPresenter.Triggers>
                                                        <EventTrigger RoutedEvent="Loaded">
                                                            <BeginStoryboard Storyboard="{StaticResource OpacityFadeIn}"/>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="Unloaded">
                                                            <BeginStoryboard Storyboard="{StaticResource OpacityFadeOut}"/>
                                                        </EventTrigger>
                                                    </ContentPresenter.Triggers>
                                                </ContentPresenter>

                                                <!--Snackbar for messages-->
                                                <materialDesign:Snackbar HorizontalAlignment="Stretch"
                                                                         Margin="{StaticResource RightBottom}"
                                                                         MessageQueue="{Binding Source={x:Static statics:Properties.Instance}, Path=MessageQueue}"/>
                                            </Grid>
                                        </materialDesign:DrawerHost>
                                    </Grid>
                                </materialDesign:DialogHost>
                            </materialDesign:DialogHost>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--TextBox style-->
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                <Setter Property="Margin" Value="{StaticResource RightBottom}" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="materialDesign:HintAssist.FloatingScale" Value="0.75" />
            </Style>

            <!--ScrollViewer style-->
            <Style TargetType="ScrollViewer" BasedOn="{StaticResource MaterialDesignScrollViewer}">
                <Setter Property="CanContentScroll" Value="False" />
                <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            </Style>

            <!--ItemsControl style-->
            <Style TargetType="ItemsControl">
                <Setter Property="IsTabStop" Value="False" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsQueryExecuted}" Value="false">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <controls:WaitingControl Message="Подождите, идёт загрузка.."/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="materialDesign:ColorZone">
                <Setter Property="Margin" Value="0" />
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth2" />
            </Style>

            <Style TargetType="materialDesign:Card" x:Key="FadeInOutCard" BasedOn="{StaticResource {x:Type materialDesign:Card}}">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard Storyboard="{StaticResource OpacityFadeIn}"/>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Unloaded">
                        <BeginStoryboard Storyboard="{StaticResource OpacityFadeOut}"/>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>